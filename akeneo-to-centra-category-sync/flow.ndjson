{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"scheduler-entry","identifier":"akeneo-fetch-categories","name":"Akeneo - Fetch - Categories","object":{"parameters":{"job":[{"prototype":"run-incoming","parameters":{"incoming":"akeneo-fetch-categories"}}],"handlers":[],"priority":2,"expression":"*/15 * * * *"}},"description":"","owner":null,"disabled":true}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"incoming-configuration","identifier":"akeneo-fetch-categories","name":"Akeneo - Fetch - Categories","object":{"parameters":{"subscriber":{"prototype":"http-subscriber","parameters":{"client":"akeneo-http-client","request":{"uri":"/api/rest/v1/categories","payload":"&{payload}","plugins":[],"payloadType":"data","authentications":[]},"pagination":{"prototype":"next","parameters":{"pattern":"_links.next","pageLimit":10000}},"transformer":{"meta":[],"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"test","value":"${AKENEO_ROOT_CATEGORY}","mappers":[]}]}},{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"test"}},"conditions":[{"prototype":"not-empty","parameters":[]},{"prototype":"not-equals","parameters":{"value":null}}]}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"payload","value":{"limit":100,"search":"{\"parent\":[{\"operator\":\"=\",\"value\":\"&{test}\"}]}","with_position":true,"with_enriched_attributes":true},"mappers":[]}]}}],"elseTransformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"payload","value":{"limit":100,"with_position":true,"with_enriched_attributes":true},"mappers":[]}]}}]}}]}},"deserializer":{"prototype":"json","parameters":{"pattern":"_embedded.items","readMethod":"wholeFile","encodeInput":false}},"requestListeners":[]}},"transformers":["akeneo-prepare-convert-labels-to-localizations","akeneo-convert-category-to-alumio-base","akeneo-filter-previous-category"]}},"description":"We need to get all categories from Akeneo system to ensure the parent children relation can be sent in the right order. To do so, we use an Incoming **\"Akeneo - Fetch - Categories\"** to get data from Akeneo Server.\n\nThis incoming will create a task inside Alumio with data structured as Alumio base categories.","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"http-client","identifier":"akeneo-http-client","name":"Akeneo - HTTP Client","object":{"prototype":"akeneo-http-client-v2","parameters":{"key":"","baseUri":"${AKENEO_BASE_URL}","advanced":[],"clientId":"${AKENEO_CLIENT_ID}","password":"${AKENEO_PASSWORD}","username":"${AKENEO_USERNAME}","clientSecret":"${AKENEO_CLIENT_SECRET}","enableLogging":true,"loggerFormatter":"full"}},"description":"","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"akeneo-prepare-convert-labels-to-localizations","name":"Akeneo - Prepare convert - Labels - To localizations","object":{"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"accessor-move","parameters":{"source":{"prototype":"key","parameters":{"keys":[],"root":"labels"}},"destination":{"prototype":"structure","parameters":{"key":"localeCode","keys":[],"root":"localizations","value":"translation"}},"stripEnclosures":true}},{"meta":[],"prototype":"value-remover","parameters":{"patterns":[{"key":"labels"}]}}]}},"description":"","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"akeneo-convert-category-to-alumio-base","name":"Akeneo - Convert - Category - To Alumio Base","object":{"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"value-remover","parameters":{"patterns":[{"key":"_links"},{"key":"updated"}]}}]}}]}},"description":"","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"akeneo-filter-previous-category","name":"Akeneo - Filter previous - Category","object":{"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"type-setter","parameters":{"entityType":"base-category"}},{"meta":[],"prototype":"storage-filter-stored-entity","parameters":{"storage":"akeneo-filter-previous-categories","addEntityToStorage":true}}]}},"description":"","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"entity","identifier":"base-category","name":"Base - Category","object":{"parameters":{"schema":[],"identifierPath":["code"]}},"description":"","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"storage","identifier":"akeneo-filter-previous-categories","name":"Akeneo - Filter previous - Categories","object":{"parameters":{"path":"akeneo-filter-previous-categories-01K4M3C8TA7T6PRG18BZREEFN5","logger":{"parameters":{"actions":[]}}}},"description":"","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"scheduler-entry","identifier":"centra-send-categories","name":"Centra - Send - Categories","object":{"parameters":{"job":[{"prototype":"run-outgoing","parameters":{"route":"synchronize-categories-from-akeneo-to-centra","numTasks":1000,"enableUnlimitedTasks":false}}],"handlers":[],"priority":2,"expression":"*/15 * * * *"}},"description":"","owner":null,"disabled":true}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"route-configuration","identifier":"synchronize-categories-from-akeneo-to-centra","name":"Synchronize Categories from Akeneo to Centra","object":{"parameters":{"incoming":"akeneo-fetch-categories","outgoing":"centra-send-category","realtime":false,"transformers":[],"waitingStatus":false,"parallelExecution":[]}},"description":"","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"outgoing-configuration","identifier":"centra-send-category","name":"Centra - Send - Category","object":{"parameters":{"publisher":{"prototype":"no-action-publisher","parameters":[]},"transformers":["centra-add-global-variables","centra-prepare-send-category-parent-id-from-alumio-base-category","centra-prepare-send-category-before-from-alumio-base-category","centra-check-and-send-category"]}},"description":"","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"centra-add-global-variables","name":"Centra - Add global variables","object":{"meta":[],"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"stores","value":[{"id":1}],"mappers":[]},{"key":"storeCategory","value":{"id":1},"mappers":[]},{"key":"status","value":"ACTIVE","mappers":[]}]}}]}}]}},"description":"Adding all data that you want added to Centra.","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"centra-prepare-send-category-parent-id-from-alumio-base-category","name":"Centra - Prepare send - Category - Parent id from Alumio Base Category","object":{"prototype":"data","parameters":{"filters":[],"transformers":[{"prototype":"conditional","parameters":{"filters":[{"prototype":"key-condition","parameters":{"filter":{"prototype":"key-exists-condition","parameters":{"path":"parent"}}}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"parent"}},"conditions":[{"prototype":"not-equals","parameters":{"value":null}},{"prototype":"not-equals","parameters":{"value":[]}},{"prototype":"not-equals","parameters":{"value":"${AKENEO_ROOT_CATEGORY}"}}]}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"storage-get-entity-from-storage","parameters":{"storage":"centra-category-akeneo-code-to-id","storageKey":"&{parent}","destination":"parentCategory"}},{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"key-condition","parameters":{"filter":{"prototype":"key-not-exists-condition","parameters":{"path":"parentCategory"}}}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"exception","parameters":{"message":"Category id not found for parent"}}],"elseTransformers":[]}}],"elseTransformers":[]}}],"elseTransformers":[]}}]}},"description":"","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"storage","identifier":"centra-category-akeneo-code-to-id","name":"Centra - Category - Akeneo code to id","object":{"parameters":{"path":"centra-category-akeneo-code-to-id-01K5VHCVJJKNVPR1S4PY9P4HR7","logger":{"parameters":{"actions":[]}}}},"description":"","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"centra-prepare-send-category-before-from-alumio-base-category","name":"Centra - Prepare send - Category - Before from Alumio Base Category ","object":{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"key-condition","parameters":{"filter":{"prototype":"key-exists-condition","parameters":{"path":"parent"}}}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"parent"}},"conditions":[{"prototype":"not-equals","parameters":{"value":null}},{"prototype":"not-equals","parameters":{"value":[]}}]}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"storage-get-entity-from-storage","parameters":{"storage":"centra-before-category-id-by-parent-code","storageKey":"&{parent}","destination":"beforeCategory"}}],"elseTransformers":[]}}],"elseTransformers":[]}}]}},"description":"This transformer will check if there already a previous category that was sent to Centra to keep the position from Akeneo","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"storage","identifier":"centra-before-category-id-by-parent-code","name":"Centra - Before category id - by parent code","object":{"parameters":{"path":"centra-before-category-id-by-parent-code-01K5VH00AW4310NCHXQP20W35Z","logger":{"parameters":{"actions":[]}}}},"description":"This storage store the last position by Akeneo category parent code","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"centra-check-and-send-category","name":"Centra - Check and send - Category","object":{"meta":[],"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"storage-get-entity-from-storage","parameters":{"storage":"centra-category-akeneo-code-to-id","storageKey":"&{code}","destination":"id"}},{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"input","value":{"uri":"&{code}","name":"&{(localizations[?localeCode=='en_US'].translation | [0]) || (localizations[?localeCode=='en_GB'].translation | [0]) || (localizations[].translation | [0])}","store":"&{storeCategory}","status":"&{status}"},"mappers":[]}]}},{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"and-condition","parameters":{"filters":[{"prototype":"key-condition","parameters":{"filter":{"prototype":"key-exists-condition","parameters":{"path":"parentCategory"}}}},{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"parentCategory"}},"conditions":[{"prototype":"not-equals","parameters":{"value":[]}},{"prototype":"not-equals","parameters":{"value":null}}]}}]}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"input.parentCategory","value":{"id":"&{parentCategory}"},"mappers":[]}]}}],"elseTransformers":[]}},{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"and-condition","parameters":{"filters":[{"prototype":"key-condition","parameters":{"filter":{"prototype":"key-exists-condition","parameters":{"path":"beforeCategory"}}}},{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"beforeCategory"}},"conditions":[{"prototype":"not-equals","parameters":{"value":[]}},{"prototype":"not-equals","parameters":{"value":null}}]}}]}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"input.beforeCategory","value":{"id":"&{beforeCategory}"},"mappers":[]}]}}],"elseTransformers":[]}},{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"and-condition","parameters":{"filters":[{"prototype":"key-condition","parameters":{"filter":{"prototype":"key-exists-condition","parameters":{"path":"id"}}}},{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"id"}},"conditions":[{"prototype":"not-equals","parameters":{"value":[]}},{"prototype":"not-equals","parameters":{"value":null}}]}}]}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"value-remover","parameters":{"patterns":[{"key":"input.store"}]}},{"meta":[],"prototype":"merger","parameters":{"template":{"result":"&{@}"},"transformer":{"meta":[],"prototype":"graphql-transformer","parameters":{"client":"centra-http-client","request":{"uri":"/graphql","method":"post","payload":{"query":"mutation updateExistingCategory($id: Int!, $input: CategoryUpdateInput!) {\n  updateCategory(id: $id, input: $input) {\n    category {\n      id\n    name\n    status\n    uri\n    metaTitle\n    metaDescription\n    metaKeywords\n    parentCategory {\n      id\n      name\n    }\n    displaySortType\n    }\n    userErrors {\n      message\n      path\n    }\n  }\n}","variables":{"id":"&{id}","input":"&{input}"}}}}}}}],"elseTransformers":[{"meta":[],"prototype":"merger","parameters":{"template":{"result":"&{@}"},"transformer":{"meta":[],"prototype":"graphql-transformer","parameters":{"client":"centra-http-client","request":{"uri":"/graphql","method":"post","payload":{"query":"mutation createNewCategory($input: CategoryCreateInput!) {\n  createCategory(input: $input) {\n    category {\n      id\n    name\n    status\n    uri\n    metaTitle\n    metaDescription\n    metaKeywords\n    parentCategory {\n      id\n      name\n    }\n    displaySortType\n    }\n    userErrors {\n      message\n      path\n    }\n  }\n}","variables":{"input":"&{input}"}}}}}}},{"meta":[],"prototype":"storage-save-entity-in-storage","parameters":{"source":"result.data.createCategory.category.id","storage":"centra-category-akeneo-code-to-id","storageKey":"&{code}"}},{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"key-condition","parameters":{"filter":{"prototype":"key-exists-condition","parameters":{"path":"parent"}}}},{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"parent"}},"conditions":[{"prototype":"not-equals","parameters":{"value":[]}},{"prototype":"not-equals","parameters":{"value":null}}]}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"storage-save-entity-in-storage","parameters":{"source":"result.data.createCategory.category.id","storage":"centra-before-category-id-by-parent-code","storageKey":"&{parent}"}}],"elseTransformers":[]}}]}}]}}]}},"description":"This transformer will check current Centra id from previous iteration of this transformer to determine either we need to create or update the category in the Centra System.","owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"http-client","identifier":"centra-http-client","name":"Centra - HTTP Client","object":{"prototype":"centra-graphql-client","parameters":{"baseUri":"https://sandbox.centraqa.com","advanced":[],"apiToken":"${CENTRA_API_TOKEN}","enableLogging":true,"loggerFormatter":"full"}},"description":"","owner":null,"disabled":false}